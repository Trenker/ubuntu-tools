# A basic server setup for nginx that supports far-future expire headers, realurl and nc_staticfilecache 
#
# Released under Public Domain, no copyright and no license applied in any way. 
# Use as you wish, but don't complain if it does not work.
#
# Uses snippets published by Michiel Roos (michiel@typofree.org) 
# under Creative Commons Attribution-Share Alike 3.0 Netherlands License.
# see http://www.typofree.org/home/category/nginx/

server {
	server_name localhost;

	
	error_log /var/logs/nginx/default-error.log;
	access_log off;
	root /var/www/default;
	index index.php;

		
	location ~* (blank|spacer|clear)\.gif$ {
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		expires max;
		empty_gif;
		break;
	}

	location / {

		if ($request_uri ~* "\.(ico|gif|png|jpe?g|css|js|swf|xml|css|json)(\?v\d\d?\.\d\d?\.\d\d?)?$") {
			add_header Pragma public;
			add_header Cache-Control "public, must-revalidate, proxy-revalidate";
			expires max;
			break;
		}
		
		# serve exising files directly
		if (-f $request_filename) {
			break;
		}

		if ($request_uri ~* "^\/?(typo3|fileadmin|uploads).*") {
			break;
		}
		
		set $static 1;

		if ($request_uri ~ "\.(xml|css)$") {
			set $static 0;
		}

		if ($http_pragma = 'no-cache') {
			set $static 0;
		}

		if ($http_cache_control = 'no-cache') {
			set $static 0;
		}

		if ($scheme = 'https') {
			set $static 0;
		}

		if ($http_cookie = 'nc_staticfilecache|be_typo_user') {
			set $static 0;
		}

		if ($request_method = 'POST') {
			set $static 0;
		}

		if ($query_string) {
			set $static 0;
		}

		if (!-f $document_root/typo3temp/tx_ncstaticfilecache/$host${request_uri}/index.html ) {
			set $static 0;
		}

		if ($static = 1) {
			rewrite .* /typo3temp/tx_ncstaticfilecache/$host${request_uri}/index.html break;
			add_header Pragma public;
			add_header Cache-Control "public, must-revalidate, proxy-revalidate";
			expires 1d; # 1 Day should be OK for common scenarios
			return 200;
		}
	
		if (!-f $request_filename) {
			rewrite .* /index.php last;
			return 200;
		}
	}
	location ~ \.php$ {
		fastcgi_pass unix:/tmp/.fastcgi.www-data/socket;
		fastcgi_index index.php;
		include fastcgi_params;
	}
}
